version: 0.2

phases:
  install:
    runtime-versions:
      python: $LAMBDA_PY_RUNTIME
    commands:
      - echo "Login su ECR"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY

  build:
    commands:
      - echo "Costruzione immagine Docker"
      - docker build -t my-lambda-image:$ENV .
      - docker tag my-lambda-image:$ENV $ECR_REPOSITORY:$ENV

  post_build:
    commands:
      - echo "Push immagine su ECR"
      - docker push $ECR_REPOSITORY:$ENV
      - echo "Aggiornamento Lambda per usare la nuova immagine"
      # - aws lambda update-function-code --function-name $LAMBDA_ARN --image-uri $ECR_REPOSITORY:latest --region $AWS_REGION
      # - aws lambda update-function-code --function-name $LAMBDA_ARN --name $ENV --image-uri $ECR_REPOSITORY:$ENV --region $AWS_REGION
      - aws lambda update-function-code --function-name $LAMBDA_ARN --image-uri $ECR_REPOSITORY:$ENV --region $AWS_REGION
      - |
        echo "Waiting for Lambda to become Active..."
        while true; do
          sleep 10
          STATE=$(aws lambda get-function-configuration --function-name $LAMBDA_ARN --query 'LastUpdateStatus' --output text)
          echo "Lambda update status: $STATE, waiting..."
          if [ "$STATE" = "Successful" ]; then
            break
          fi
        done
      - VERSION=$(aws lambda publish-version --function-name $LAMBDA_ARN --query 'Version' --output text)
      - aws lambda update-alias --function-name $LAMBDA_ARN --name $ENV --function-version $VERSION --region $AWS_REGION


